#!/bin/csh -f
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 1991-2005 OpenCFD Ltd.
#    \\/     M anipulation  |
#-------------------------------------------------------------------------------
# License
#     This file is part of OpenFOAM.
#
#     OpenFOAM is free software; you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by the
#     Free Software Foundation; either version 2 of the License, or (at your
#     option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM; if not, write to the Free Software Foundation,
#     Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
# Script
#     cshrc
#
# Description
#     Startup File for OpenFoam.
#     Sourced from ~/.cshrc
#
#------------------------------------------------------------------------------

setenv WM_PROJECT OpenFOAM
setenv WM_PROJECT_VERSION 1.1
setenv WM_PROJECT_LANGUAGE c++

#!!User: uncomment one of the lines below to set the WM_PROJECT_INST_DIR to
#        point to where you installed Foam.
#
# Location of FOAM installation
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
setenv WM_PROJECT_INST_DIR $HOME/$WM_PROJECT
#setenv WM_PROJECT_INST_DIR ~$WM_PROJECT
#setenv WM_PROJECT_INST_DIR $HOME/$WM_PROJECT/$LOGNAME-$WM_PROJECT_VERSION
#setenv WM_PROJECT_INST_DIR /usr/local/$WM_PROJECT

# Check that the installation directory has been set and exists
if ( $?WM_PROJECT_INST_DIR ) then
if ( -d $WM_PROJECT_INST_DIR ) then

setenv WM_PROJECT_DIR $WM_PROJECT_INST_DIR/$WM_PROJECT-$WM_PROJECT_VERSION

# Location of users FOAM files
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
setenv WM_PROJECT_USER_DIR $HOME/$WM_PROJECT/$LOGNAME-$WM_PROJECT_VERSION


# Compiler (if set to "" use the system compiler)
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
setenv WM_COMPILER Gcc
setenv WM_COMPILER_ARCH
setenv WM_COMPILER_LIB_ARCH


# Compilation options (optimised or debug or profiling)
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
setenv WM_COMPILE_OPTION Opt
#setenv WM_COMPILE_OPTION Debug
#setenv WM_COMPILE_OPTION Prof

setenv WM_JAVAC_OPTION Opt
#setenv WM_JAVAC_OPTION Debug


# Detect system type and set environment variables
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
set machineTest=`uname -s`

# Linux workstation
# ~~~~~~~~~~~~~~~~~
if ($machineTest == Linux) then

    setenv WM_COMPILER

    set processor = `uname -m`

    if ($processor == i686) then
        setenv WM_ARCH linux
        #setenv WM_COMPILER I32
    else if ($processor == x86_64) then
        if ( $?WM_64 ) then
            setenv WM_ARCH linuxAMD64
            setenv WM_COMPILER_LIB_ARCH 64
            setenv CC 'gcc'
            setenv CXX 'g++'
            setenv CFLAGS '-m64'
            setenv CXXFLAGS '-m64'
            setenv LDFLAGS '-m64'
        else
            setenv WM_ARCH linux
            setenv WM_COMPILER_ARCH '-64'
            setenv CC 'gcc'
            setenv CXX 'g++'
            setenv CFLAGS '-m32'
            setenv CXXFLAGS '-m32'
            setenv LDFLAGS '-m32'
        endif
    else if ($processor == ia64) then
        setenv WM_ARCH linuxIA64
        setenv WM_COMPILER I64
    else if ($processor == ppc) then
        setenv WM_ARCH linuxPPC
    else
        echo Unknown processor type $processor for Linux
    endif

    #setenv WM_MPLIB
    setenv WM_MPLIB LAM
    #setenv WM_MPLIB MPI

# SUN workstation 
# ~~~~~~~~~~~~~~~
else if ($machineTest == SunOS) then

    setenv WM_ARCH solaris
    setenv WM_MPLIB LAM
    #setenv WM_MPLIB MPI

# Silicon Graphics workstation
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
else if ($machineTest == IRIX || $machineTest == IRIX64) then

    setenv WM_ARCH sgiN32
    #setenv WM_ARCH sgi64
    #setenv WM_COMPILER_LIB_ARCH /mabi=64
    #setenv WM_MPLIB LAM
    setenv WM_MPLIB MPI

# IBM RS6000 workstation
# ~~~~~~~~~~~~~~~~~~~~~~
else if ($machineTest == AIX) then

    setenv WM_ARCH ibm
    setenv WM_MPLIB 
    #setenv WM_MPLIB LAM
    #setenv WM_MPLIB MPI

# HP workstation
# ~~~~~~~~~~~~~~
else if ($machineTest == HP-UX) then

    setenv WM_ARCH hpux
    #setenv WM_MPLIB LAM
    setenv WM_MPLIB MPI

# An unsupported operating system
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

else

    echo \
        Your $machineTest operating system is not supported\
        by this release of OpenFOAM. For further assistance,\
        please contact www.openfoam.org.
    echo

endif


# Clean standard environment variables (path, PATH, MANPATH, LD_LIBRARY_PATH)
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

if (! $?LD_LIBRARY_PATH ) then
    setenv LD_LIBRARY_PATH ''
endif
if (! $?MANPATH) then
    setenv MANPATH ''
endif

set cleanProg=$WM_PROJECT_DIR/bin/foamCleanPath

#- Clean path/PATH. Remove anything under top-level foam directory.
set colonPath=`echo "$path" | sed -e 's/ /:/g'`
set PATH=`$cleanProg "$colonPath" "$WM_PROJECT_INST_DIR"`
if ( $status == 0 ) then
    set path=`echo "$PATH" | sed -e 's/:/ /g'`
endif

#- Clean LD_LIBRARY_PATH
setenv LD_LIBRARY_PATH `$cleanProg "$LD_LIBRARY_PATH" "$WM_PROJECT_INST_DIR"`

#- Clean MANPATH
setenv MANPATH `$cleanProg "$MANPATH" "$WM_PROJECT_INST_DIR"`


# FOAM: set-up FOAM release-specific environment
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
alias SOURCE 'set foamDotFile=\!*; source \!*; unset foamDotFile'
SOURCE $WM_PROJECT_DIR/.cshrc


# Alias Declarations
# ~~~~~~~~~~~~~~~~~~
alias src 'cd $FOAM_SRC'
alias lib 'cd $FOAM_LIB'
alias run 'cd $FOAM_RUN'
alias foam 'cd $WM_PROJECT_DIR'
alias foamsrc 'cd $FOAM_SRC/$WM_PROJECT'
alias app 'cd $FOAM_APP'
alias util 'cd $FOAM_UTILITIES'
alias sol 'cd $FOAM_SOLVERS'
alias tut 'cd $FOAM_TUTORIALS'


# SOURCE user setup files for optional packages
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#SOURCE $HOME/$FOAM_DOT_DIR/apps/dxFoam/cshrc
#SOURCE $HOME/$FOAM_DOT_DIR/apps/ensightFoam/cshrc
#SOURCE $HOME/$FOAM_DOT_DIR/apps/paraview/cshrc


# Again clean environment (path, PATH, MANPATH, LD_LIBRARY_PATH)
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#- Clean path/PATH. Only remove duplicates
set colonPath=`echo "$path" | sed -e 's/ /:/g'`
set PATH=`$cleanProg "$colonPath"`
if ( $status == 0 ) then
    set path=`echo "$PATH" | sed -e 's/:/ /g'`
endif

#- Clean LD_LIBRARY_PATH
setenv LD_LIBRARY_PATH `$cleanProg "$LD_LIBRARY_PATH"`

#- For HP: copy into SHLIB_PAT
if ($machineTest == HP-UX) then
    setenv SHLIB_PATH "$LD_LIBRARY_PATH"
endif

#- Clean MANPATH
setenv MANPATH `$cleanProg "$MANPATH"`

else
    echo
    echo $HOME/.$WM_PROJECT-$WM_PROJECT_VERSION/cshrc: cannot find FOAM installation
    echo
endif
else
    echo
    echo '$HOME/.$WM_PROJECT-$WM_PROJECT_VERSION/cshrc: $WM_PROJECT_INST_DIR not set'
    echo
endif

# -----------------------------------------------------------------------------
