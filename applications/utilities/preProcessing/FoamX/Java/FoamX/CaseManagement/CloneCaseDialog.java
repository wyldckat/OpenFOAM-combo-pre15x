/*---------------------------------------------------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     |
    \\  /    A nd           | Copyright (C) 1991-2005 OpenCFD Ltd.
     \\/     M anipulation  |
-------------------------------------------------------------------------------
License
    This file is part of OpenFOAM.

    OpenFOAM is free software; you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by the
    Free Software Foundation; either version 2 of the License, or (at your
    option) any later version.

    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with OpenFOAM; if not, write to the Free Software Foundation,
    Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

\*---------------------------------------------------------------------------*/
package FoamX.CaseManagement;

import java.util.*;
import javax.swing.*;

import FoamX.App;
import FoamXServer.ApplicationClassDescriptor;

public class CloneCaseDialog extends javax.swing.JDialog
{
    //--------------------------------------------------------------------------

    protected boolean wasCancelled_;
    protected String caseClass_;
    protected String caseRoot_;
    protected String time_;
    protected ApplicationClassDescriptor[] applicationClasses_;

    //--------------------------------------------------------------------------
    /** CreateCaseDialog constructor. */
    public CloneCaseDialog
    (
        java.awt.Frame parent,
        ApplicationClassDescriptor[] applicationClasses,
        String[] caseRoots,
        String[] times
    )
    {
        super(parent, true);      // Modal.

        wasCancelled_       = false;
        applicationClasses_ = applicationClasses;

        // Initialise the default GUI.
        initComponents();

        // Initialise the application class combo box.
        for (int i = 0; i <applicationClasses_.length; i++)
        {
            appClassCombo_.addItem(applicationClasses_[i].name);
        }

        // Initialise the case roots combo box.
        for (int i = 0; i <caseRoots.length; i++)
        {
            rootCombo_.addItem(caseRoots[i]);
        }

        // Initialise the time selection combo box.
        for (int i = 0; i < times.length; i++)
        {
            timeCombo_.addItem(times[i]);
        }

        // Repack everything.
        pack();
    }

    //--------------------------------------------------------------------------

    public boolean wasCancelled()
    {
        return wasCancelled_;
    }

    //--------------------------------------------------------------------------

    public String getCaseClass()
    {
        return caseClass_;
    }
    public void setCaseClass(String appClass)
    {
        // Update the application class combo box.
        appClassCombo_.setSelectedItem(appClass);
    }

    //--------------------------------------------------------------------------

    public String getCaseRoot()
    {
        return caseRoot_;
    }
    public void setCaseRoot(String root)
    {
        // Update the root combo box.
        rootCombo_.setSelectedItem(root);
    }

    //--------------------------------------------------------------------------

    public String getCaseName()
    {
        return caseNameTextField_.getText();
    }
    public void setCaseName(String name)
    {
        caseNameTextField_.setText(name);
    }

    //--------------------------------------------------------------------------

    public String getTime()
    {
        return time_;
    }
    public void setTime(String time)
    {
        // Update the root combo box.
        timeCombo_.setSelectedItem(time);
    }

    //--------------------------------------------------------------------------
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        mainPanel_ = new javax.swing.JPanel();
        label1_ = new javax.swing.JLabel();
        appClassCombo_ = new javax.swing.JComboBox();
        timeLabel = new javax.swing.JLabel();
        timeCombo_ = new javax.swing.JComboBox();
        label2_ = new javax.swing.JLabel();
        rootCombo_ = new javax.swing.JComboBox();
        label3_ = new javax.swing.JLabel();
        caseNameTextField_ = new javax.swing.JTextField();
        buttonPanel_ = new javax.swing.JPanel();
        buttonOK_ = new javax.swing.JButton();
        buttonCancel_ = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setTitle("Create New Case");
        setFont(new java.awt.Font("Dialog", 0, 10));
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        mainPanel_.setLayout(new java.awt.GridBagLayout());

        mainPanel_.setMinimumSize(null);
        mainPanel_.setPreferredSize(null);
        label1_.setFont(new java.awt.Font("Dialog", 0, 10));
        label1_.setForeground(java.awt.Color.black);
        label1_.setText("Class");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 5, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        mainPanel_.add(label1_, gridBagConstraints);

        appClassCombo_.setFont(new java.awt.Font("Dialog", 0, 10));
        appClassCombo_.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                OnAppClassComboChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 5, 10);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        mainPanel_.add(appClassCombo_, gridBagConstraints);

        timeLabel.setFont(new java.awt.Font("Dialog", 0, 10));
        timeLabel.setForeground(java.awt.Color.black);
        timeLabel.setText("Times");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 5, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        mainPanel_.add(timeLabel, gridBagConstraints);

        timeCombo_.setFont(new java.awt.Font("Dialog", 0, 10));
        timeCombo_.setMinimumSize(null);
        timeCombo_.setPreferredSize(null);
        timeCombo_.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                onTimeComboChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 5, 10);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        mainPanel_.add(timeCombo_, gridBagConstraints);

        label2_.setFont(new java.awt.Font("Dialog", 0, 10));
        label2_.setForeground(java.awt.Color.black);
        label2_.setText("Case Root");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        mainPanel_.add(label2_, gridBagConstraints);

        rootCombo_.setFont(new java.awt.Font("Dialog", 0, 10));
        rootCombo_.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                OnRootComboChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 10);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        mainPanel_.add(rootCombo_, gridBagConstraints);

        label3_.setFont(new java.awt.Font("Dialog", 0, 10));
        label3_.setForeground(java.awt.Color.black);
        label3_.setText("Case Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 10, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        mainPanel_.add(label3_, gridBagConstraints);

        caseNameTextField_.setFont(new java.awt.Font("Default", 0, 10));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 10, 10);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        mainPanel_.add(caseNameTextField_, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(mainPanel_, gridBagConstraints);

        buttonPanel_.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        buttonPanel_.setBorder(new javax.swing.border.EtchedBorder());
        buttonOK_.setFont(new java.awt.Font("Dialog", 0, 10));
        buttonOK_.setText("OK");
        buttonOK_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OnOK(evt);
            }
        });

        buttonPanel_.add(buttonOK_);

        buttonCancel_.setFont(new java.awt.Font("Dialog", 0, 10));
        buttonCancel_.setText("Cancel");
        buttonCancel_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OnCancel(evt);
            }
        });

        buttonPanel_.add(buttonCancel_);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        getContentPane().add(buttonPanel_, gridBagConstraints);

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setSize(new java.awt.Dimension(400, 300));
        setLocation((screenSize.width-400)/2,(screenSize.height-300)/2);
    }//GEN-END:initComponents

    private void onTimeComboChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_onTimeComboChanged
        // Add your handling code here:
        // Get the selected time selection.
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED)
        {
            time_ = (String)evt.getItem();
        }
    }//GEN-LAST:event_onTimeComboChanged

    //--------------------------------------------------------------------------

  private void OnRootComboChanged (java.awt.event.ItemEvent evt)
    {//GEN-FIRST:event_OnRootComboChanged
        // Get the selected case root.
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED)
        {
            caseRoot_ = (String)evt.getItem();
        }
  }//GEN-LAST:event_OnRootComboChanged

    //--------------------------------------------------------------------------

  private void OnAppClassComboChanged (java.awt.event.ItemEvent evt)
    {//GEN-FIRST:event_OnAppClassComboChanged
        // Get the selected application class.
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED)
        {
            caseClass_ = (String)evt.getItem();
        }
  }//GEN-LAST:event_OnAppClassComboChanged

    //--------------------------------------------------------------------------

  private void OnCancel (java.awt.event.ActionEvent evt)
    {//GEN-FIRST:event_OnCancel
        wasCancelled_ = true;
        setVisible(false);
        dispose();
  }//GEN-LAST:event_OnCancel

    //--------------------------------------------------------------------------

  private void OnOK (java.awt.event.ActionEvent evt)
    {//GEN-FIRST:event_OnOK

        //JTextField edit = (JTextField)rootCombo_.getEditor().getEditorComponent();
        //edit.setText(caseRoot_);

        // Only close if we have a case name entered.
        if (getCaseName().trim().length()> 0)
        {
            wasCancelled_ = false;
            setVisible(false);
            dispose();
        }
        else
        {
            App.getRootFrame().getToolkit().getDefaultToolkit().beep();
        }

  }//GEN-LAST:event_OnOK

    //--------------------------------------------------------------------------

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt)
    {//GEN-FIRST:event_closeDialog
        wasCancelled_ = true;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    //--------------------------------------------------------------------------

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox timeCombo_;
    private javax.swing.JPanel mainPanel_;
    private javax.swing.JPanel buttonPanel_;
    private javax.swing.JTextField caseNameTextField_;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JLabel label2_;
    private javax.swing.JButton buttonCancel_;
    private javax.swing.JComboBox rootCombo_;
    private javax.swing.JButton buttonOK_;
    private javax.swing.JComboBox appClassCombo_;
    private javax.swing.JLabel label1_;
    private javax.swing.JLabel label3_;
    // End of variables declaration//GEN-END:variables

    //--------------------------------------------------------------------------
    //--------------------------------------------------------------------------
    //--------------------------------------------------------------------------
    //--------------------------------------------------------------------------
    //--------------------------------------------------------------------------
    //--------------------------------------------------------------------------

}




