package FoamXServer.CaseServer;


/**
* FoamXServer/CaseServer/IFoamPropertiesOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from FoamX.idl
* 04 March 2005 01:10:48 o'clock GMT
*/


// ---------------------------------------------------------------------
public interface IFoamPropertiesOperations 
{

  //- Attributes.
  String[] availableModules ();

  //- Root directories to search for cases.
  String[] rootDirectories ();

  //- Unexpanded form of rootDirectories.
  String[] rawRootDirectories ();
  void addRootDirectory (String rawRootDir) throws FoamXServer.FoamXError, FoamXServer.FoamXIOError;
  void deleteRootDirectory (String rawRootDir) throws FoamXServer.FoamXError, FoamXServer.FoamXIOError;

  // Foam types.
  String[] foamTypes ();
  void getFoamType (String foamTypeName, FoamXServer.ITypeDescriptorHolder typeDesc) throws FoamXServer.FoamXError, FoamXServer.FoamXIOError;

  // Geometry types.
  String[] geometryTypes ();
  void getGeometryType (String geometryTypeName, FoamXServer.CaseServer.IGeometryDescriptorHolder geometryDesc) throws FoamXServer.FoamXError, FoamXServer.FoamXIOError;

  // Patch types.
  String[] patchTypes ();
  void getPatchType (String patchTypeName, FoamXServer.CaseServer.IPatchDescriptorHolder patchDesc) throws FoamXServer.FoamXError, FoamXServer.FoamXIOError;
  void findPatchType (String patchTypeName, FoamXServer.CaseServer.IPatchDescriptorHolder patchDesc) throws FoamXServer.FoamXError, FoamXServer.FoamXIOError;

  // Patch field types.
  String[] patchFieldTypes ();
  void getPatchFieldType (String patchFieldTypeName, FoamXServer.ITypeDescriptorHolder patchFieldDesc) throws FoamXServer.FoamXError, FoamXServer.FoamXIOError;
  void findPatchFieldType (String patchFieldTypeName, FoamXServer.ITypeDescriptorHolder patchFieldDesc) throws FoamXServer.FoamXError, FoamXServer.FoamXIOError;

  // Application classes.
  FoamXServer.ApplicationClassDescriptor[] applicationClasses ();
  void getApplicationClass (String appClassName, FoamXServer.CaseServer.IApplicationClassHolder appClass) throws FoamXServer.FoamXError, FoamXServer.FoamXIOError;
  void addApplicationClass (String appClassName, FoamXServer.CaseServer.IApplicationClassHolder appClass) throws FoamXServer.FoamXError, FoamXServer.FoamXIOError;
  void deleteApplicationClass (String appClassName) throws FoamXServer.FoamXError, FoamXServer.FoamXIOError;
  void cloneApplicationClass (String appClassNameSrc, String appClassNameDest, FoamXServer.CaseServer.IApplicationClassHolder appClass) throws FoamXServer.FoamXError, FoamXServer.FoamXIOError;

  // Foam utilities.
  FoamXServer.UtilityDescriptor[] utilities ();
  void getUtilityControlDict (String utilityName, String rootDir, String caseName, FoamXServer.IDictionaryEntryHolder controlDict) throws FoamXServer.FoamXError, FoamXServer.FoamXIOError;

  //- Validation.
  void validate () throws FoamXServer.FoamXError, FoamXServer.FoamXIOError, FoamXServer.ValidationError;

  //- Persistence.
  void saveSystemProperties () throws FoamXServer.FoamXError, FoamXServer.FoamXIOError, FoamXServer.ValidationError;
  void saveUserProperties () throws FoamXServer.FoamXError, FoamXServer.FoamXIOError, FoamXServer.ValidationError;
} // interface IFoamPropertiesOperations
