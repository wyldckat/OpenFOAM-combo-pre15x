package FoamXServer;


/**
* FoamXServer/UtilityDescriptorHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from FoamX.idl
* 04 March 2005 01:10:48 o'clock GMT
*/


// Utility descriptor structure.
abstract public class UtilityDescriptorHelper
{
  private static String  _id = "IDL:FoamXServer/UtilityDescriptor:1.0";

  public static void insert (org.omg.CORBA.Any a, FoamXServer.UtilityDescriptor that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static FoamXServer.UtilityDescriptor extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  private static boolean __active = false;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      synchronized (org.omg.CORBA.TypeCode.class)
      {
        if (__typeCode == null)
        {
          if (__active)
          {
            return org.omg.CORBA.ORB.init().create_recursive_tc ( _id );
          }
          __active = true;
          org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember [8];
          org.omg.CORBA.TypeCode _tcOf_members0 = null;
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[0] = new org.omg.CORBA.StructMember (
            "name",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[1] = new org.omg.CORBA.StructMember (
            "description",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[2] = new org.omg.CORBA.StructMember (
            "category",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_boolean);
          _members0[3] = new org.omg.CORBA.StructMember (
            "systemClass",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_boolean);
          _members0[4] = new org.omg.CORBA.StructMember (
            "changesMesh",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_boolean);
          _members0[5] = new org.omg.CORBA.StructMember (
            "changesFields",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[6] = new org.omg.CORBA.StructMember (
            "clientBean",
            _tcOf_members0,
            null);
          _tcOf_members0 = FoamXServer.ITypeDescriptorHelper.type ();
          _members0[7] = new org.omg.CORBA.StructMember (
            "controlDict",
            _tcOf_members0,
            null);
          __typeCode = org.omg.CORBA.ORB.init ().create_struct_tc (FoamXServer.UtilityDescriptorHelper.id (), "UtilityDescriptor", _members0);
          __active = false;
        }
      }
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static FoamXServer.UtilityDescriptor read (org.omg.CORBA.portable.InputStream istream)
  {
    FoamXServer.UtilityDescriptor value = new FoamXServer.UtilityDescriptor ();
    value.name = istream.read_string ();
    value.description = istream.read_string ();
    value.category = istream.read_string ();
    value.systemClass = istream.read_boolean ();
    value.changesMesh = istream.read_boolean ();
    value.changesFields = istream.read_boolean ();
    value.clientBean = istream.read_string ();
    value.controlDict = FoamXServer.ITypeDescriptorHelper.read (istream);
    return value;
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, FoamXServer.UtilityDescriptor value)
  {
    ostream.write_string (value.name);
    ostream.write_string (value.description);
    ostream.write_string (value.category);
    ostream.write_boolean (value.systemClass);
    ostream.write_boolean (value.changesMesh);
    ostream.write_boolean (value.changesFields);
    ostream.write_string (value.clientBean);
    FoamXServer.ITypeDescriptorHelper.write (ostream, value.controlDict);
  }

}
