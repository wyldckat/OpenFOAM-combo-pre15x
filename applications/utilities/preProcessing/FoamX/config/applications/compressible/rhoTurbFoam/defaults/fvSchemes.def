default
{

ddtSchemes
{
    default Euler;
}

gradSchemes
{
    default          Gauss linear;
    grad(p)          Gauss linear;
}

divSchemes
{
    default          none;
    div(phi,U)       Gauss Gamma2V 1;
    div(phid,p)      Gauss Gamma2 1;
    div(phiU,p)      Gauss linear;
    div(phi,h)       Gauss Gamma2 1;
    div(phi,k)       Gauss Gamma2 1;
    div(phi,epsilon) Gauss Gamma2 1;
    div(phi,R)       Gauss Gamma2 1; 
    div((rho*R))     Gauss linear;     
    div(R)           Gauss linear; 
    div(U)           Gauss linear;
    div((muEff*dev2(grad(U).T()))) Gauss linear;
}

laplacianSchemes
{
    default         none;
    laplacian(muEff,U) Gauss linear corrected;
    laplacian(mut,U) Gauss linear corrected;
    laplacian(DkEff,k) Gauss linear corrected;
    laplacian(DepsilonEff,epsilon) Gauss linear corrected;
    laplacian(DREff,R) Gauss linear corrected; 
    laplacian((rho|A(U)),p) Gauss linear corrected;
    laplacian(alphaEff,h) Gauss linear corrected;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         corrected;
}

fluxRequired
{
    default         no;
    p;
}

}
