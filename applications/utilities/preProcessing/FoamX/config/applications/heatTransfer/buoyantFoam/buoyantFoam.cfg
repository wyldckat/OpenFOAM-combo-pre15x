/*---------------------------------------------------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.0                                   |
|   \\  /    A nd           | Web:      http://www.openfoam.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version             1.0;
    format              ascii;
    
    root                "";
    case                "";
    instance            "";
    local               "";
    
    class               dictionary;
    object              buoyantFoam.cfg;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

description         "Solver for transient, buoyant, turbulent flow of compressible fluids for ventilation and heat-transfer";

executable          buoyantFoam;

parameters
( 
    "Root Path" 
    "Case Name" 
);

modules
( 
    FoamX.Modules.CaseEditor.CaseEditorModule
);

dictionaries
( 
    controlDict
    fvSchemes 
    fvSolution
    turbulenceProperties 
    thermophysicalProperties 
    environmentalProperties 
);

fields
{
    include "$FOAMX_SYSTEM_CONFIG/types/geometricFields/pDynamic.cfg";
    include "$FOAMX_SYSTEM_CONFIG/types/geometricFields/U.cfg";
    include "$FOAMX_SYSTEM_CONFIG/types/geometricFields/k.cfg";
    include "$FOAMX_SYSTEM_CONFIG/types/geometricFields/epsilon.cfg";
    include "$FOAMX_SYSTEM_CONFIG/types/geometricFields/Rdynamic.cfg";
    include "$FOAMX_SYSTEM_CONFIG/types/geometricFields/T.cfg";
}

boundaryTypes
{
    slip
    {
        displayName         "slip";
        description         "Slip boundary condition";
        patchType           patch;
        p                   slip;
        U                   slip;
        T                   zeroGradient;
        k                   slip;
        epsilon             slip;
        R                   slip;
    }

    outlet
    {
        displayName         "outlet";
        description         "Outlet boundary condition";
        patchType           patch;
        p                   fixedValue;
        U                   zeroGradient;
        T                   zeroGradient;
        k                   zeroGradient;
        epsilon             zeroGradient;
        R                   zeroGradient;
    }

    outletInlet
    {
        displayName         "outletInlet";
        description         "Outlet boundary condition";
        patchType           patch;
        p                   fixedValue;
        U                   inletOutlet;
        T                   zeroGradient;
        k                   zeroGradient;
        epsilon             zeroGradient;
        R                   zeroGradient;
    }

    fluxOutlet
    {
        displayName         "fluxOutlet";
        description         "Flux outlet boundary condition";
        patchType           patch;
        p                   fixedValue;
        U                   fluxCorrectedVelocity;
        T                   zeroGradient;
        k                   zeroGradient;
        epsilon             zeroGradient;
        R                   zeroGradient;
    }

    inletOutlet
    {
        displayName         "inletOutlet";
        description         "Inlet/outlet boundary condition";
        patchType           patch;
        p                   fixedValue;
        U                   pressureInletOutletVelocity;
        T                   inletOutlet;
        k                   inletOutlet;
        epsilon             inletOutlet;
        R                   inletOutlet;
    }

    inlet
    {
        displayName         "inlet";
        description         "Inlet boundary condition";
        patchType           patch;
        p                   zeroGradient;
        U                   fixedValue;
        T                   fixedValue;
        k                   fixedValue;
        epsilon             fixedValue;
        R                   fixedValue;
    }

    pressureInlet
    {
        displayName         "pressureInlet";
        description         "Pressure inlet boundary condition";
        patchType           patch;
        p                   fixedValue;
        U                   pressureInletVelocity;
        T                   fixedValue;
        k                   fixedValue;
        epsilon             fixedValue;
        R                   fixedValue;
    }

    totalPressureInlet
    {
        displayName         "totalPressureInlet";
        description         "Total pressure inlet boundary condition";
        patchType           patch;
        p                   totalPressure;
        U                   pressureInletVelocity;
        T                   fixedValue;
        k                   fixedValue;
        epsilon             fixedValue;
        R                   fixedValue;
    }

    wallFunctions
    {
        displayName         "wallFunctions";
        description         "Wall functions boundary condition";
        patchType           wall;
        p                   wallBuoyantPressure;
        U                   fixedValue;
        T                   zeroGradient;
        k                   zeroGradient;
        epsilon             zeroGradient;
        R                   zeroGradient;
    }
    
    wallAdiabatic
    {
        displayName         "wallAdiabatic";
        description         "Adiabatic wall boundary condition";
        patchType           wall;
        p                   wallBuoyantPressure;
        U                   fixedValue;
        T                   zeroGradient;
        k                   zeroGradient;
        epsilon             zeroGradient;
        R                   zeroGradient;
    }

    wallFixedTemp
    {
        displayName         "wallFixedTemp";
        description         "Fixed temperature wall boundary condition";
        patchType           wall;
        p                   wallBuoyantPressure;
        U                   fixedValue;
        T                   fixedValue;
        k                   zeroGradient;
        epsilon             zeroGradient;
        R                   zeroGradient;
    }

    wallFixedHeatFlux
    {
        displayName         "wallFixedHeatFlux";
        description         "Fixed heat flux wall boundary condition";
        patchType           wall;
        p                   wallBuoyantPressure;
        U                   fixedValue;
        T                   heatFlux;
        k                   zeroGradient;
        epsilon             zeroGradient;
        R                   zeroGradient;
    }
}

// ************************************************************************* //
