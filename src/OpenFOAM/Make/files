OSspecific = OSspecific/Unix
$(OSspecific)/signals/sigFpe.C
$(OSspecific)/signals/sigSegv.C
$(OSspecific)/signals/sigInt.C
$(OSspecific)/signals/sigQuit.C
$(OSspecific)/timer.C
$(OSspecific)/fileStat.C
$(OSspecific)/Unix.C
$(OSspecific)/cpuTime/cpuTime.C

global/global.C
global/dimensionedConstants/dimensionedConstants.C
global/argList/argList.C
global/clock/clock.C

primitives/bool/bool.C
primitives/bool/boolIO.C
primitives/char/charIO.C
primitives/int/intIO.C
primitives/uint/uintIO.C
primitives/long/longIO.C
primitives/label/label.C
primitives/Scalar/doubleScalar/doubleScalar.C
primitives/Scalar/floatScalar/floatScalar.C
primitives/Scalar/scalar/scalar.C
primitives/labelVector/labelVector.C
primitives/vector/vector.C
primitives/labelTensor/labelTensor.C
primitives/tensor/tensor.C
primitives/diagTensor/diagTensor.C
primitives/sphericalTensor/sphericalTensor.C
primitives/complex/complex.C
primitives/complexVector/complexVector.C

strings = primitives/strings
$(strings)/string/string.C
$(strings)/string/stringIO.C
$(strings)/word/word.C
$(strings)/word/wordIO.C
$(strings)/fileName/fileName.C
$(strings)/fileName/fileNameIO.C

primitives/random/Random.C

containers/HashTables/HashTable/HashTableName.C
containers/HashTables/StaticHashTable/StaticHashTableName.C
containers/Lists/SortableList/ParSortableListName.C
containers/Lists/PackedList/PackedListName.C
containers/Lists/ListOps/ListOps.C
containers/LinkedLists/linkTypes/SLListBase/SLListBase.C
containers/LinkedLists/linkTypes/DLListBase/DLListBase.C

primitiveLists = primitives/Lists
$(primitiveLists)/boolList.C
$(primitiveLists)/labelIOList.C
$(primitiveLists)/scalarList.C
$(primitiveLists)/vectorList.C
$(primitiveLists)/tensorList.C
$(primitiveLists)/sphericalTensorList.C

Streams = db/IOstreams
$(Streams)/token/tokenIO.C

IOstreams = $(Streams)/IOstreams
$(IOstreams)/IOstream.C
$(IOstreams)/versionNumber.C
$(IOstreams)/Istream.C
$(IOstreams)/IOprint.C
$(IOstreams)/IOcheck.C
$(IOstreams)/Ostream.C

Sstreams = $(Streams)/Sstreams
$(Sstreams)/ISread.C
$(Sstreams)/ISnextValid.C
$(Sstreams)/ISreadToken.C
$(Sstreams)/readHexLabel.C
$(Sstreams)/OSwrite.C
$(Sstreams)/Sprint.C
$(Sstreams)/prefixOSstream/prefixOSwrite.C
$(Sstreams)/prefixOSstream/prefixOSprint.C

gzstream = $(Streams)/gzstream
$(gzstream)/gzstream.C

Fstreams = $(Streams)/Fstreams
$(Fstreams)/IFstream.C
$(Fstreams)/OFstream.C

Tstreams = $(Streams)/Tstreams
$(Tstreams)/ITread.C
$(Tstreams)/Tprint.C

StringStreams = $(Streams)/StringStreams
$(StringStreams)/StringStreamPrint.C

Pstreams = $(Streams)/Pstreams
$(Pstreams)/Pstream.C
$(Pstreams)/PstreamCommsStruct.C
$(Pstreams)/IPread.C
$(Pstreams)/OPwrite.C
$(Pstreams)/Pprint.C
$(Pstreams)/IPreadToken.C

dictionary = db/dictionary
$(dictionary)/dictionary.C
$(dictionary)/dictionaryIO.C

entry = $(dictionary)/entry
$(entry)/entry.C
$(entry)/entryIO.C

primitiveEntry = $(dictionary)/primitiveEntry
$(primitiveEntry)/primitiveEntry.C
$(primitiveEntry)/primitiveEntryIO.C

dictionaryEntry = $(dictionary)/dictionaryEntry
$(dictionaryEntry)/dictionaryEntry.C
$(dictionaryEntry)/dictionaryEntryIO.C

IOdictionary = db/IOdictionary
$(IOdictionary)/IOdictionary.C
$(IOdictionary)/IOdictionaryIO.C

IOobject = db/IOobject
$(IOobject)/IOobject.C
$(IOobject)/IOobjectIO.C
$(IOobject)/IOobjectReadHeader.C
$(IOobject)/IOobjectWriteHeader.C

regIOobject = db/regIOobject
$(regIOobject)/regIOobject.C
$(regIOobject)/regIOobjectRead.C
$(regIOobject)/regIOobjectWrite.C

IOobjectList = db/IOobjectList
$(IOobjectList)/IOobjectList.C

objectRegistry = db/objectRegistry
$(objectRegistry)/objectRegistry.C

Switch = db/Switch
$(Switch)/Switch.C
$(Switch)/SwitchIO.C

Time = db/Time
$(Time)/TimePaths.C
$(Time)/TimeState.C
$(Time)/Time.C
$(Time)/TimeIO.C
$(Time)/findTimes.C
$(Time)/subCycleTime.C
$(Time)/findInstance.C

$(Time)/instant/instant.C

dimensionSet/dimensionSet.C
dimensionSet/dimensionSetIO.C
dimensionSet/dimensionSets.C
dimensionedTypes/dimensionedScalar/dimensionedScalar.C
dimensionedTypes/dimensionedTensor/dimensionedTensor.C

matrices/solution/solution.C

lduMatrix = matrices/lduMatrix
$(lduMatrix)/lduMatrix/lduMatrix.C
$(lduMatrix)/lduMatrix/lduMatrixOperations.C
$(lduMatrix)/lduMatrix/lduMatrixATmul.C
$(lduMatrix)/lduMatrix/lduMatrixTests.C
$(lduMatrix)/lduMatrix/lduMatrixUpdateCoupledInterfaces.C
$(lduMatrix)/lduMatrix/lduMatrixSolver.C

$(lduMatrix)/solvers/diagonalSolver/diagonalSolver.C
$(lduMatrix)/solvers/ICCG/DCG.C
$(lduMatrix)/solvers/ICCG/ICCG.C
$(lduMatrix)/solvers/BICCG/BDCG.C
$(lduMatrix)/solvers/BICCG/BICCG.C
$(lduMatrix)/solvers/GaussSeidel/GaussSeidel.C
$(lduMatrix)/solvers/GaussSeidel/GaussSeidelSmooth.C

lduAddressing = $(lduMatrix)/lduAddressing
$(lduAddressing)/lduAddressing.C
$(lduAddressing)/lduCoupledInterface.C
$(lduAddressing)/processorLduCoupledInterface.C
$(lduAddressing)/cyclicLduCoupledInterface.C

amgSymSolver = $(lduMatrix)/solvers/amgSymSolver
$(amgSymSolver)/amgSymSolver.C
$(amgSymSolver)/amgSymSolverCalcAgglomeration.C
$(amgSymSolver)/amgSymSolverMakeCoarseMatrix.C
$(amgSymSolver)/amgSymSolverOperations.C
$(amgSymSolver)/amgSymSolverSolve.C

amgInterfaces = $(amgSymSolver)/interfaces
amgCoupledInterface = $(amgInterfaces)/amgCoupledInterface
$(amgCoupledInterface)/amgCoupledInterface.C
$(amgCoupledInterface)/newAmgCoupledInterface.C

amgProcessorInterface = $(amgInterfaces)/processorAmgCoupledInterface
$(amgProcessorInterface)/processorAmgCoupledInterface.C

amgCyclicInterface = $(amgInterfaces)/cyclicAmgCoupledInterface
$(amgCyclicInterface)/cyclicAmgCoupledInterface.C

primitiveShapes = meshes/primitiveShapes

$(primitiveShapes)/plane/plane.C
$(primitiveShapes)/triangle/intersection.C

meshShapes = meshes/meshShapes
$(meshShapes)/edge/edgeIOList.C

face = $(meshShapes)/face
$(face)/face.C
$(face)/faceIntersection.C
$(face)/faceContactSphere.C
$(face)/faceAreaInContact.C
$(face)/faceIOList.C

cell = $(meshShapes)/cell
$(cell)/cell.C
$(cell)/oppositeCellFace.C
$(cell)/cellIOList.C

tetCell = $(meshShapes)/tetCell
$(tetCell)/tetCell.C

cellModeller = $(meshShapes)/cellModeller
$(cellModeller)/cellModeller.C
$(cellModeller)/cellModellerIO.C

cellModel = $(meshShapes)/cellModel
$(cellModel)/cellModel.C
$(cellModel)/cellModelIO.C

cellShape = $(meshShapes)/cellShape
$(cellShape)/cellShape.C
$(cellShape)/cellShapeEqual.C
$(cellShape)/cellShapeIO.C
$(cellShape)/cellShapeIOList.C

meshes/patchIdentifier/patchIdentifier.C

polyMesh = meshes/polyMesh

polyPatches = $(polyMesh)/polyPatches
$(polyPatches)/polyPatch/polyPatch.C
$(polyPatches)/polyPatch/newPolyPatch.C

basicPolyPatches = $(polyPatches)/basicPolyPatches
$(basicPolyPatches)/emptyPolyPatch/emptyPolyPatch.C
$(basicPolyPatches)/symmetryPolyPatch/symmetryPolyPatch.C
$(basicPolyPatches)/wedgePolyPatch/wedgePolyPatch.C
$(basicPolyPatches)/coupledPolyPatch/coupledPolyPatch.C

derivedPolyPatches = $(polyPatches)/derivedPolyPatches
$(derivedPolyPatches)/wallPolyPatch/wallPolyPatch.C
$(derivedPolyPatches)/processorPolyPatch/processorPolyPatch.C
$(derivedPolyPatches)/cyclicPolyPatch/cyclicPolyPatch.C

polyBoundaryMesh = $(polyMesh)/polyBoundaryMesh
$(polyBoundaryMesh)/polyBoundaryMesh.C
$(polyBoundaryMesh)/polyBoundaryMeshEntries.C

meshes/ProcessorTopology/commSchedule.C

parallelInfo = $(polyMesh)/parallelInfo
$(parallelInfo)/parallelInfo.C
$(parallelInfo)/globalPoints.C

$(polyMesh)/syncTools/syncTools.C

zones = $(polyMesh)/zones

cellZone = $(zones)/cellZone
$(cellZone)/cellZone.C
$(cellZone)/newCellZone.C

faceZone = $(zones)/faceZone
$(faceZone)/faceZone.C
$(faceZone)/newFaceZone.C

pointZones = $(zones)/pointZones
pointZone = $(pointZones)/pointZone
$(pointZone)/pointZone.C
$(pointZone)/newPointZone.C

$(polyMesh)/polyMesh.C
$(polyMesh)/polyMeshFromShapeMesh.C
$(polyMesh)/polyMeshIO.C
$(polyMesh)/polyMeshClear.C
$(polyMesh)/polyMeshCalcFaceCells.C
$(polyMesh)/polyMeshUpdate.C

primitiveMesh = meshes/primitiveMesh
$(primitiveMesh)/primitiveMesh.C
$(primitiveMesh)/primitiveMeshCellCells.C
$(primitiveMesh)/primitiveMeshCellCentresAndVols.C
$(primitiveMesh)/primitiveMeshCellEdges.C
$(primitiveMesh)/primitiveMeshCells.C
$(primitiveMesh)/primitiveMeshCheck.C
$(primitiveMesh)/primitiveMeshCheckMotion.C
$(primitiveMesh)/primitiveMeshClear.C
$(primitiveMesh)/primitiveMeshEdgeCells.C
$(primitiveMesh)/primitiveMeshEdgeFaces.C
$(primitiveMesh)/primitiveMeshEdges.C
$(primitiveMesh)/primitiveMeshFaceCentresAndAreas.C
$(primitiveMesh)/primitiveMeshFindCell.C
$(primitiveMesh)/primitiveMeshPointCells.C
$(primitiveMesh)/primitiveMeshPointEdges.C
$(primitiveMesh)/primitiveMeshPointFaces.C
$(primitiveMesh)/primitiveMeshPointPoints.C
$(primitiveMesh)/primitiveMeshCellPoints.C
$(primitiveMesh)/primitiveMeshCalcCellShapes.C

primitivePatch = meshes/primitivePatch
$(primitivePatch)/patchZones.C
$(primitivePatch)/walkPatch.C

cellMatcher = $(meshShapes)/cellMatcher
$(cellMatcher)/cellMatcher.C
$(cellMatcher)/hexMatcher.C
$(cellMatcher)/wedgeMatcher.C
$(cellMatcher)/prismMatcher.C
$(cellMatcher)/pyrMatcher.C
$(cellMatcher)/tetWedgeMatcher.C
$(cellMatcher)/tetMatcher.C
$(cellMatcher)/degenerateMatcher.C

mapPolyMesh = $(polyMesh)/mapPolyMesh
$(mapPolyMesh)/mapPolyMesh.C
$(mapPolyMesh)/pointMapper/pointMapper.C
$(mapPolyMesh)/faceMapper/faceMapper.C
$(mapPolyMesh)/cellMapper/cellMapper.C

PrimitivePatch = meshes/PrimitivePatch
$(PrimitivePatch)/PrimitivePatchName.C

pointMesh = meshes/pointMesh
$(pointMesh)/pointMesh.C

pointPatches = $(pointMesh)/pointPatches
$(pointPatches)/pointPatch/pointPatch.C
$(pointPatches)/facePointPatch/facePointPatch.C
$(pointPatches)/facePointPatch/newFacePointPatch.C

basicPointPatches = $(pointPatches)/basicPointPatches
$(basicPointPatches)/emptyPointPatch/emptyPointPatch.C
$(basicPointPatches)/symmetryPointPatch/symmetryPointPatch.C
$(basicPointPatches)/wedgePointPatch/wedgePointPatch.C

derivedPointPatches = $(pointPatches)/derivedPointPatches
$(derivedPointPatches)/cyclicPointPatch/cyclicPointPatch.C
$(derivedPointPatches)/processorPointPatch/processorPointPatch.C
$(derivedPointPatches)/globalProcessorPointPatch/globalProcessorPointPatch.C
$(derivedPointPatches)/wallPointPatch/wallPointPatch.C

pointBoundaryMesh = $(pointMesh)/pointBoundaryMesh
$(pointBoundaryMesh)/pointBoundaryMesh.C

meshes/boundBox/boundBox.C

meshTools = meshes/meshTools
$(meshTools)/matchPoints.C
$(meshTools)/mergePoints.C

Fields = fields/Fields
$(Fields)/labelField/labelField.C
$(Fields)/scalarField/scalarField.C
$(Fields)/tensorField/tensorField.C
$(Fields)/diagTensorField/diagTensorField.C
$(Fields)/sphericalTensorField/sphericalTensorField.C
$(Fields)/complexFields/complexFields.C

fields/cloud/cloud.C

$(Fields)/labelField/labelIOField.C
$(Fields)/scalarField/scalarIOField.C
$(Fields)/vectorField/vectorIOField.C
$(Fields)/tensorField/tensorIOField.C
$(Fields)/diagTensorField/diagTensorIOField.C
$(Fields)/sphericalTensorField/sphericalTensorIOField.C

pointPatchFields = fields/pointPatchFields
$(pointPatchFields)/pointPatchField/pointPatchFields.C

basicPointPatchFields = $(pointPatchFields)/basicPointPatchFields
$(basicPointPatchFields)/calculated/calculatedPointPatchFields.C
$(basicPointPatchFields)/default/defaultPointPatchFields.C
$(basicPointPatchFields)/valueStored/valueStoredPointPatchFields.C
$(basicPointPatchFields)/fixedValue/fixedValuePointPatchFields.C
$(basicPointPatchFields)/zeroGradient/zeroGradientPointPatchFields.C
$(basicPointPatchFields)/mixed/mixedPointPatchFields.C

derivedPointPatchFields = $(pointPatchFields)/derivedPointPatchFields
$(derivedPointPatchFields)/empty/emptyPointPatchFields.C
$(derivedPointPatchFields)/cyclic/cyclicPointPatchFields.C
$(derivedPointPatchFields)/wedge/wedgePointPatchFields.C
$(derivedPointPatchFields)/slip/slipPointPatchFields.C
$(derivedPointPatchFields)/symmetry/symmetryPointPatchFields.C
$(derivedPointPatchFields)/processor/processorPointPatchFields.C
$(derivedPointPatchFields)/globalProcessor/globalProcessorPointPatchFields.C

fields/GeometricFields/pointFields/pointFields.C

meshes/bandCompression/bandCompression.C
meshes/preservePatchTypes/preservePatchTypes.C

interpolations = interpolations
interpolation = $(interpolations)/interpolation
$(interpolations)/patchToPatchInterpolation/PatchToPatchInterpolationName.C

algorithms/meshWave/meshWaveName.C

graph/curve/curve.C
graph/graph.C

writers = graph/writers
$(writers)/rawGraph/rawGraph.C
$(writers)/gnuplotGraph/gnuplotGraph.C
$(writers)/xmgrGraph/xmgrGraph.C
$(writers)/jplotGraph/jplotGraph.C

LIB = $(FOAM_LIBBIN)/libOpenFOAM
