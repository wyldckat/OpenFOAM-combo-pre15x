#!/bin/sh
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 1991-2005 OpenCFD Ltd.
#    \\/     M anipulation  |
#-------------------------------------------------------------------------------
# License
#     This file is part of OpenFOAM.
#
#     OpenFOAM is free software; you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by the
#     Free Software Foundation; either version 2 of the License, or (at your
#     option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM; if not, write to the Free Software Foundation,
#     Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
#
# Script
#     foamCleanPath
#
# Description
#     Usage: cleanPath path 'dir1 .. dirn'
#
#     Prints its argument (which should be a ':' separated path)
#     without all
#         - duplicate elements
#         - non-accessible directories
#         - elements which match any of dir1 .. dirn (uses grep)
#------------------------------------------------------------------------------

if [ $# -eq 1 ]; then
    dirList="$1"
    wildCards=""
else
    if [ $# -eq 2 ]; then
        dirList="$1"
        wildCards="$2"
    else
        echo "Usage: $0 path 'wildcard .. wildcard'" 1>&2
        echo "" 1>&2
        echo "Prints argument path with all entries matching " 1>&2
        echo " any of the wildcards removed." 1>&2
        exit 1
    fi
fi


oldIFS="$IFS"
IFS=':'

newDirList=''

for dir in $dirList
do

    #- non existing
    if [ ! -d "$dir" ]; then
        continue
    fi

    #- matching wildcards
    matchWildCard=false
    for wildCard in $wildCards
    do
        echo "$dir" | grep  "$wildCard" >/dev/null
        if [ $? -eq 0 ]; then
            matchWildCard=true
            break
        fi
    done
    if [  "$matchWildCard" = 'true' ]; then
        continue
    fi

    #- duplicate
    dirListWithout=`echo ":${newDirList}:" | sed -e "s@:${dir}:@::@"`
    if [ "$dirListWithout" != ":${newDirList}:" ]; then
        continue
    fi

    newDirList="$newDirList:$dir"
done

IFS="$oldIFS"

echo "$newDirList" | sed -e 's@^:@@' -e 's@:$@@'

# -----------------------------------------------------------------------------
